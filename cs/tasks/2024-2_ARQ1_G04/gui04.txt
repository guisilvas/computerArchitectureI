Tarefa: 2024-2_ARQ1_G04
Aluno: Guilherme Soares Silva
Matrícula: 863485

Atividades
01.) Construir a tabela-verdade para as proposições
     e verificar pelas respectivas tabelas-verdades implementadas em Verilog e pelo Logisim:

R:
a.) x' . ( y'+ z )'
#mintermos | mintermos | x y z | x' | y' | z' | y' + z  | (y' + z)' | x' • (y' + z)'
-------------------------------------------------------------------------------
    0      | x'•y'•z'  | 0 0 0 |  1 |  1 |  1 |    1    |    0     |    0
    1      | x'•y'•z   | 0 0 1 |  1 |  1 |  0 |    1    |    0     |    0
    2      | x'•y•z'   | 0 1 0 |  1 |  0 |  1 |    0    |    1     |    1
    3      | x'•y•z    | 0 1 1 |  1 |  0 |  0 |    1    |    0     |    0
    4      | x•y'•z'   | 1 0 0 |  0 |  1 |  1 |    1    |    0     |    0
    5      | x•y'•z    | 1 0 1 |  0 |  1 |  0 |    1    |    0     |    0
    6      | x•y•z'    | 1 1 0 |  0 |  0 |  1 |    0    |    1     |    0
    7      | x•y•z     | 1 1 1 |  0 |  0 |  0 |    1    |    0     |    0
    
module fxyz (output s, input x, y, z);
assign s = ~x & (~( ~y | z ));
endmodule // fxyz

b.) ( x' + y' )' . z   
#mintermos | x y z | x' | y' | z' | x' + y' | (x' + y')' | z | (x' + y')' • z
--------------------------------------------------------------------------------
    0      | 0 0 0 |  1 |  1 |  1 |    1    |      0     | 0 |        0
    1      | 0 0 1 |  1 |  1 |  0 |    1    |      0     | 1 |        0
    2      | 0 1 0 |  1 |  0 |  1 |    1    |      0     | 0 |        0
    3      | 0 1 1 |  1 |  0 |  0 |    1    |      0     | 1 |        0
    4      | 1 0 0 |  0 |  1 |  1 |    1    |      0     | 0 |        0
    5      | 1 0 1 |  0 |  1 |  0 |    1    |      0     | 1 |        0
    6      | 1 1 0 |  0 |  0 |  1 |    0    |      1     | 0 |        0
    7      | 1 1 1 |  0 |  0 |  0 |    0    |      1     | 1 |        1
   
module fxyz (output s, input x, y, z);
assign s = ~(~x | ~y) & z;
endmodule // fxyz

c.) ( x . y' )' . z'
#mintermos | x y z | x' | y' | z' |  x • y' |  (x • y')' |  z' | (x • y')' • z'
--------------------------------------------------------------------------------
    0      | 0 0 0 |  1 |  1 |  1 |    0    |      1     |  1  |        1
    1      | 0 0 1 |  1 |  1 |  0 |    0    |      1     |  0  |        0
    2      | 0 1 0 |  1 |  0 |  1 |    0    |      1     |  1  |        1
    3      | 0 1 1 |  1 |  0 |  0 |    0    |      1     |  0  |        0
    4      | 1 0 0 |  0 |  1 |  1 |    1    |      0     |  1  |        0
    5      | 1 0 1 |  0 |  1 |  0 |    1    |      0     |  0  |        0
    6      | 1 1 0 |  0 |  0 |  1 |    0    |      1     |  1  |        1
    7      | 1 1 1 |  0 |  0 |  0 |    0    |      1     |  0  |        0

module fxyz (output s, input x, y, z);
assign s = ~(x & ~y) & ~z;
endmodule // fxyz
  
d.) ( x' . y )' . z
#mintermos | x y z | x' | y' | z' |  x' • y |  (x' • y)' |  z | (x' • y)' • z
--------------------------------------------------------------------------------
    0      | 0 0 0 |  1 |  1 |  1 |    0    |      1     |  0  |        0
    1      | 0 0 1 |  1 |  1 |  0 |    0    |      1     |  1  |        1
    2      | 0 1 0 |  1 |  0 |  1 |    1    |      0     |  0  |        0
    3      | 0 1 1 |  1 |  0 |  0 |    1    |      0     |  1  |        0
    4      | 1 0 0 |  0 |  1 |  1 |    0    |      1     |  0  |        0
    5      | 1 0 1 |  0 |  1 |  0 |    0    |      1     |  1  |        1
    6      | 1 1 0 |  0 |  0 |  1 |    0    |      1     |  0  |        0
    7      | 1 1 1 |  0 |  0 |  0 |    0    |      1     |  1  |        1
 
module fxyz (output s, input x, y, z);
assign s = ~((~x & y)) & z;
endmodule // fxyz
    
e.) ( x' + y ) . ( y' + z)'
#mintermos | x y z | x' | y' | z' | x' + y | y' + z | (y' + z)' | (x' + y) • (y' + z)'
-----------------------------------------------------------------------------------------
    0      | 0 0 0 |  1 |  1 |  1 |   1    |   1    |     0     |          0
    1      | 0 0 1 |  1 |  1 |  0 |   1    |   1    |     0     |          0
    2      | 0 1 0 |  1 |  0 |  1 |   1    |   1    |     0     |          0
    3      | 0 1 1 |  1 |  0 |  0 |   1    |   0    |     1     |          1
    4      | 1 0 0 |  0 |  1 |  1 |   1    |   1    |     0     |          0
    5      | 1 0 1 |  0 |  1 |  0 |   1    |   1    |     0     |          0
    6      | 1 1 0 |  0 |  0 |  1 |   1    |   1    |     0     |          0
    7      | 1 1 1 |  0 |  0 |  0 |   1    |   0    |     1     |          1
 
module fxyz (output s, input x, y, z);
assign s = (~x | y) & ~(~y | z);
endmodule // fxyz


02.) Simplificar as expressões abaixo pelas propriedades da álgebra de Boole
     e verificar pelas respectivas tabelas-verdades implementadas em Verilog ou pelo Logisim:

R:
a.) x . ( x' + y )':
    x . ( x + y' )
    x + y'
    
module fxyz (output s, input x, y);
assign s = x & ~y;
endmodule // fxyz


b.) ( x' + y ) + ( x' . y ):
    [ ( x' + y ) + x' ] + [ ( x' + y ) + y ]
    x' . y
    
module fxyz (output s, input x, y);
assign s = ~x | y;
endmodule // fxyz

c.) ( x' . y' )' . ( x + y ):
    ( x . y ) . ( x + y )
    [ ( x . y ) + x ] + [ ( x . y ) + y ]
    x + y
    
module fxyz (output s, input x, y);
assign s = x | y;
endmodule // fxyz

d.) ( x' . y )' + ( x' + y )':
    ( x . y' ) + ( x + y' )
    [ ( x . y' ) + x ] + [ ( x . y' ) + y' ]
    x . y'
    
module fxyz (output s, input x, y);
assign s = 1;
endmodule // fxyz

e.) ( y + x' ) . ( y' + x )':
    ( y + x' ) . ( y + x' )
    [ ( y . x' ) + y ] + [ ( y . x' ) + x' ]
    y . x'
    
module fxyz (output s, input x, y);
assign s = y & ~x;
endmodule // fxyz

03.) Montar as tabelas-verdades expressas pelas somas de produtos abaixo
     e verificar pelas respectivas tabelas-verdades implementadas em Verilog ou pelo Logisim:
R:
a) f (x,y,z)= ∑ m ( 1, 5, 6, 7 )
#mintermos | x | y | z | x' | y' | z' | x' • y' • z' | x' • y' • z | x' • y • z' | x' • y • z | x • y' • z' | x • y' • z | x • y • z' | x • y • z |
---------------------------------------------------------------------------------------------------------------------------------------------------
    0      | 0 | 0 | 0 |  1 |  1 |  1 |      1       |      0      |      0      |      0     |      0     |      0     |      0     |      0     |
    1      | 0 | 0 | 1 |  1 |  1 |  0 |      0       |      1      |      0      |      0     |      0     |      0     |      0     |      0     |
    2      | 0 | 1 | 0 |  1 |  0 |  1 |      0       |      0      |      1      |      0     |      0     |      0     |      0     |      0     |
    3      | 0 | 1 | 1 |  1 |  0 |  0 |      0       |      0      |      1      |      1     |      0     |      0     |      0     |      0     |
    4      | 1 | 0 | 0 |  0 |  1 |  1 |      0       |      0      |      0      |      0     |      1     |      0     |      0     |      0     |
    5      | 1 | 0 | 1 |  0 |  1 |  0 |      0       |      0      |      0      |      1     |      1     |      1     |      0     |      0     |
    6      | 1 | 1 | 0 |  0 |  0 |  1 |      0       |      0      |      0      |      0     |      0     |      0     |      1     |      0     |
    7      | 1 | 1 | 1 |  0 |  0 |  0 |      0       |      0      |      0      |      0     |      0     |      0     |      0     |      1     |
    
module SoP_a (output s, input x, y, z);
  assign s = (~x & y & z) | (x & ~y & z) | (x & y & ~z) | (x & y & z);
endmodule

b) f (x,y,z)= ∑ m ( 2, 5, 6, 7 )
#mintermos | x | y | z | x' | y' | z' | x' • y' • z' | x' • y' • z | x' • y • z' | x' • y • z | x • y' • z' | x • y' • z | x • y • z' | x • y • z |
-----------------------------------------------------------------------------------------
    0      | 0 | 0 | 0 |  1 |  1 |  1 |      1       |      0      |      0      |      0     |      0     |      0     |      0     |      0     |
    1      | 0 | 0 | 1 |  1 |  1 |  0 |      0       |      1      |      0      |      0     |      0     |      0     |      0     |      0     |
    2      | 0 | 1 | 0 |  1 |  0 |  1 |      0       |      0      |      1      |      0     |      0     |      0     |      0     |      0     |
    3      | 0 | 1 | 1 |  1 |  0 |  0 |      0       |      0      |      1      |      1     |      0     |      0     |      0     |      0     |
    4      | 1 | 0 | 0 |  0 |  1 |  1 |      0       |      0      |      0      |      0     |      1     |      0     |      0     |      0     |
    5      | 1 | 0 | 1 |  0 |  1 |  0 |      0       |      0      |      0      |      1     |      1     |      1     |      0     |      0     |
    6      | 1 | 1 | 0 |  0 |  0 |  1 |      0       |      0      |      0      |      0     |      0     |      0     |      1     |      0     |
    7      | 1 | 1 | 1 |  0 |  0 |  0 |      0       |      0      |      0      |      0     |      0     |      0     |      0     |      1     |
    
module SoP_b (output s, input x, y, z);
  assign s = (~x & y & ~z) | (x & ~y & z) | (x & y & ~z) | (x & y & z);
endmodule

c) f (x,y,w,z) = ∑ m ( 1, 2, 3, 6, 7, 11, 15 )
#mintermos | x | y | w | z | x' | y' | w' | z' | x' • y' • w' • z' | x' • y' • w' • z | x' • y' • w • z' | x' • y' • w • z | x' • y • w' • z' | x' • y • w' • z | x' • y • w • z' | x' • y • w • z | x • y' • w' • z' | x • y' • w' • z | x • y' • w • z' | x • y' • w • z | x • y • w' • z' | x • y • w' • z | x • y • w • z' | x • y • w • z |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    0      | 0 | 0 | 0 | 0 |  1 |  1 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |       0        |       0       |      0      |         1        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    1      | 0 | 0 | 0 | 1 |  1 |  1 |  1 |  0 |         0        |        1       |         0        |        0       |         0        |       0        |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    2      | 0 | 0 | 1 | 0 |  1 |  1 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |       0        |       0       |      0      |         0        |      1       |         0        |       0        |         0        |        0       |        0        |       0      |
    3      | 0 | 0 | 1 | 1 |  1 |  1 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |       0        |       0       |      0      |         0        |      1       |         0        |       0        |         0        |        0       |        0        |       0      |
    4      | 0 | 1 | 0 | 0 |  1 |  0 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |        0       |       0       |      0      |         1        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    5      | 0 | 1 | 0 | 1 |  1 |  0 |  0 |  1 |         0        |        1       |         0        |        0       |         0        |        0       |       0       |      0      |         0        |      1       |         0        |       0        |         0        |        0       |        0        |       0      |
    6      | 0 | 1 | 1 | 0 |  1 |  0 |  0 |  0 |         0        |        0       |         1        |        0       |         0        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    7      | 0 | 1 | 1 | 1 |  1 |  0 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |        0       |       1       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |
    8      | 1 | 0 | 0 | 0 |  1 |  1 |  1 |  1 |         1        |        0       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    9      | 1 | 0 | 0 | 1 |  1 |  0 |  0 |  1 |         0        |        1       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    10     | 1 | 0 | 1 | 0 |  1 |  1 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |        1       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    11     | 1 | 0 | 1 | 1 |  1 |  0 |  0 |  0 |         0        |        0       |         0        |        1       |         1        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |
    12     | 1 | 1 | 0 | 0 |  0 |  1 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |        1       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    13     | 1 | 1 | 0 | 1 |  0 |  1 |  0 |  1 |         0        |        1       |         0        |        0       |         0        |        1       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    14     | 1 | 1 | 1 | 0 |  0 |  0 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |        0       |       1       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    15     | 1 | 1 | 1 | 1 |  0 |  0 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |

module SoP_c (output s, input x, y, w, z);
  assign s = (~x & ~y & w & z) | (~x & y & ~w & z) | (~x & y & w & z) |
            (x & ~y & ~w & z) | (x & ~y & w & z) | (x & y & ~w & z) | 
            (x & y & w & z);
endmodule

d) f (x,y,w,z) = ∑ m ( 1, 2, 6, 8, 10, 12, 14 )
#mintermos | x | y | w | z | x' | y' | w' | z' | x' • y' • w' • z' | x' • y' • w' • z | x' • y' • w • z' | x' • y' • w • z | x' • y • w' • z' | x' • y • w' • z | x' • y • w • z' | x' • y • w • z | x • y' • w' • z' | x • y' • w' • z | x • y' • w • z' | x • y' • w • z | x • y • w' • z' | x • y • w' • z | x • y • w • z' | x • y • w • z |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    0      | 0 | 0 | 0 | 0 |  1 |  1 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |        0       |       0       |      0      |         1        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    1      | 0 | 0 | 0 | 1 |  1 |  1 |  1 |  0 |         0        |        1       |         0        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    2      | 0 | 0 | 1 | 0 |  1 |  1 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    3      | 0 | 0 | 1 | 1 |  1 |  1 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    4      | 0 | 1 | 0 | 0 |  1 |  0 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |        0       |       0       |      0      |         1        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    5      | 0 | 1 | 0 | 1 |  1 |  0 |  0 |  1 |         0        |        1       |         0        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    6      | 0 | 1 | 1 | 0 |  1 |  0 |  0 |  0 |         0        |        0       |         1        |        0       |         0        |        0       |       1       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    7      | 0 | 1 | 1 | 1 |  1 |  0 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |
    8      | 1 | 0 | 0 | 0 |  0 |  1 |  1 |  1 |         1        |        0       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    9      | 1 | 0 | 0 | 1 |  0 |  1 |  0 |  1 |         0        |        1       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    10     | 1 | 0 | 1 | 0 |  0 |  1 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |        1       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    11     | 1 | 0 | 1 | 1 |  0 |  1 |  0 |  0 |         0        |        0       |         0        |        1       |         1        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |
    12     | 1 | 1 | 0 | 0 |  0 |  0 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |        1       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    13     | 1 | 1 | 0 | 1 |  0 |  0 |  0 |  1 |         0        |        1       |         0        |        0       |         0        |        1       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    14     | 1 | 1 | 1 | 0 |  0 |  0 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |        0       |       1       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    15     | 1 | 1 | 1 | 1 |  0 |  0 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |

module SoP_d (output s, input x, y, w, z);
  assign s = (~x & ~y & w & ~z) | (~x & y & ~w & ~z) | (~x & y & w & ~z) |
            (x & ~y & ~w & z) | (x & ~y & w & z) | (x & y & ~w & z) |
            (x & y & w & ~z);
endmodule

e) f (x,y,w,z) = ∑ m ( 0, 2, 5, 7, 8, 11 )
#mintermos | x | y | w | z | x' | y' | w' | z' | x' • y' • w' • z' | x' • y' • w' • z | x' • y' • w • z' | x' • y' • w • z | x' • y • w' • z' | x' • y • w' • z | x' • y • w • z' | x' • y • w • z | x • y' • w' • z' | x • y' • w' • z | x • y' • w • z' | x • y' • w • z | x • y • w' • z' | x • y • w' • z | x • y • w • z' | x • y • w • z |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    0      | 0 | 0 | 0 | 0 |  1 |  1 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |        0       |       0       |      0      |         1        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    1      | 0 | 0 | 0 | 1 |  1 |  1 |  1 |  0 |         0        |        1       |         0        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    2      | 0 | 0 | 1 | 0 |  1 |  1 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    3      | 0 | 0 | 1 | 1 |  1 |  1 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    4      | 0 | 1 | 0 | 0 |  1 |  0 |  1 |  1 |         1        |        0       |         0        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    5      | 0 | 1 | 0 | 1 |  1 |  0 |  0 |  1 |         0        |        1       |         0        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    6      | 0 | 1 | 1 | 0 |  1 |  0 |  0 |  0 |         0        |        0       |         1        |        0       |         0        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    7      | 0 | 1 | 1 | 1 |  1 |  0 |  0 |  0 |         0        |        0       |         0        |        1       |         0        |        0       |       1       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |
    8      | 1 | 0 | 0 | 0 |  0 |  1 |  1 |  1 |         0        |        0       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    9      | 1 | 0 | 0 | 1 |  0 |  1 |  0 |  1 |         0        |        1       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    10     | 1 | 0 | 1 | 0 |  0 |  1 |  0 |  1 |         0        |        0       |         1        |        0       |         0        |        1       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    11     | 1 | 0 | 1 | 1 |  0 |  1 |  0 |  0 |         0        |        0       |         0        |        1       |         1        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |
    12     | 1 | 1 | 0 | 0 |  0 |  0 |  1 |  1 |         0        |        0       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    13     | 1 | 1 | 0 | 1 |  0 |  0 |  0 |  1 |         0        |        0       |         0        |        0       |         1        |        0       |       0       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    14     | 1 | 1 | 1 | 0 |  0 |  0 |  0 |  1 |         0        |        0       |         0        |        0       |         0        |        0       |       1       |      0      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       0      |
    15     | 1 | 1 | 1 | 1 |  0 |  0 |  0 |  0 |         0        |        0       |         0        |        0       |         0        |        0       |       0       |      1      |         0        |      0       |         0        |       0        |         0        |        0       |        0        |       1      |

module SoP_e (output s, input x, y, w, z);
  assign s = (~x & ~y & ~w & z) | (~x & ~y & w & ~z) | (x & ~y & ~w & z) |
            (x & ~y & w & z) | (x & y & ~w & z) | (x & y & w & ~z);
endmodule


04.) Montar as expressões PoS equivalentes aos produtos das somas abaixo
     e verificar pelas respectivas tabelas-verdades implementadas em Verilog ou pelo Logisim:
a) F (X,Y,Z) = π M ( 1, 2, 6, 7 )
	X + Y + ~Z
	X + ~Y + ~Z
	~X + ~Y + Z
	~X + Y + Z
	
	module PoS_a (output S, input X, Y, Z);
	  assign S = (X | Y | Z) & (X | Y | ~Z) & (~X | Y | Z) & (~X | Y | ~Z);
	endmodule
	
b) F (X,Y,Z) = π M ( 0, 3, 4, 7 )
	~X + ~Y + ~Z
	~X + ~Y + Z
	~X + Y + ~Z
	~X + Y + Z
	
	module PoS_b (output S, input X, Y, Z);
	  assign S = (~X | ~Y | ~Z) & (~X | ~Y | Z) & (~X | Y | ~Z) & (~X | Y | Z);
	endmodule

c) F (X,Y,W,Z) = π M ( 0, 1, 2, 4, 6, 8, 11, 12 )
	~X + ~Y + ~W + ~Z
	~X + ~Y + ~W + Z
	~X + ~Y + W + ~Z
	~X + Y + ~W + ~Z
	~X + Y + W + ~Z
	X + ~Y + ~W + ~Z
	X + ~Y + ~W + Z
	X + ~Y + W + ~Z
	
	module PoS_c (output S, input X, Y, W, Z);
	  assign S = (~X | ~Y | ~W | Z) & (~X | ~Y | W | Z) & (~X | Y | ~W | Z) &
		    (X | ~Y | ~W | Z) & (X | ~Y | W | Z) & (X | Y | W | ~Z) &
		    (X | Y | ~W | Z) & (X | Y | W | Z);
	endmodule

d) F (X,Y,W,Z) = π M ( 1, 2, 4, 7, 8, 9, 15 )
	X + Y + ~W + ~Z
	X + Y + ~W + Z
	X + ~Y + ~W + ~Z
	X + ~Y + ~W + Z
	~X + Y + ~W + ~Z
	~X + Y + ~W + Z
	~X + ~Y + W + Z
	
	module PoS_d (output S, input X, Y, W, Z);
	  assign S = (~X | ~Y | ~W | ~Z) & (~X | ~Y | ~W | Z) & (~X | Y | ~W | ~Z) &
		    (~X | Y | ~W | Z) & (X | ~Y | W | ~Z) & (X | ~Y | W | Z) &
		    (X | Y | ~W | ~Z) & (X | Y | ~W | Z) & (X | Y | W | ~Z);
	endmodule

e) F (X,Y,W,Z) = π M ( 0, 1, 2, 4, 5, 10, 13 )
	~X + ~Y + ~W + ~Z
	~X + ~Y + ~W + Z
	~X + ~Y + W + ~Z
	~X + Y + ~W + ~Z
	~X + Y + ~W + Z
	X + ~Y + ~W + Z
	X + ~Y + W + ~Z
	
	module PoS_e (output S, input X, Y, W, Z);
	  assign S = (~X | ~Y | ~W | Z) & (~X | Y | W | ~Z) & (~X | Y | W | Z) &
		    (X | ~Y | ~W | ~Z) & (X | ~Y | ~W | Z) & (X | Y | ~W | Z) &
		    (X | Y | W | ~Z) & (X | Y | W | Z);
	endmodule

05.) Identificar as expressões SoP e PoS equivalentes às tabelas abaixo
     e verificar pelas respectivas tabelas-verdades implementadas em Verilog ou pelo Logisim:

    a.)
n | x | y | f(x, y) | SoP(x, y) = ____________ | PoS(x, y) = ____________
----------------------------------------------------------------------
0 | 0 | 0 |    0    |          x' • y'        |         (x + y)'
1 | 0 | 1 |    0    |                          | 
2 | 1 | 0 |    1    |                          | 
3 | 1 | 1 |    0    |                          | 

module SoP_a (output s, input x, y, z);
  // Mintermos: 1 (001), 5 (101), 6 (110), 7 (111)
  assign s = (~x & ~y & z) | (~x & y & ~z) | (x & ~y & z) | (x & y & z);
endmodule

module PoS_a (output s, input x, y, z);
  // Maxtermos: 1 (001), 2 (010), 6 (110), 7 (111)
  assign s = (x | y | ~z) & (x | ~y | ~z) & (~x | y | ~z) & (~x | ~y | ~z);
endmodule


    b.)
n | x | y | f(x, y) | SoP(x, y) = ____________ | PoS(x, y) = ____________
----------------------------------------------------------------------
0 | 0 | 0 |    0    |       x' • y            |          (x + y)'
1 | 0 | 1 |    1    |                          | 
2 | 1 | 0 |    0    |                          | 
3 | 1 | 1 |    1    |                          | 

module SoP_b (output s, input x, y, z);
  // Mintermos: 2 (010), 5 (101), 6 (110), 7 (111)
  assign s = (~x & y & ~z) | (x & ~y & z) | (x & y & ~z) | (x & y & z);
endmodule

module PoS_b (output s, input x, y, z);
  // Maxtermos: 0 (000), 3 (011), 4 (100), 7 (111)
  assign s = (x | y | z) & (x | ~y | ~z) & (~x | y | ~z) & (~x | ~y | ~z);
endmodule


    c.)
n | x | y | z | f(x, y, z) | SoP(x, y, z) = ____________ | PoS(x, y, z) = ____________
----------------------------------------------------------------------------
0 | 0 | 0 | 0 |     1      |  x'•y'•z' + x'•y•z + x•y'•z + x•y'•z' + x•y•z  |  (x + y + z) • (x + y + ~z) • (~x + y + ~z)
1 | 0 | 0 | 1 |     0      |                          | 
2 | 0 | 1 | 0 |     0      |                          | 
3 | 0 | 1 | 1 |     1      |                          | 
4 | 1 | 0 | 0 |     1      |                          | 
5 | 1 | 0 | 1 |     1      |                          | 
6 | 1 | 1 | 0 |     0      |                          | 
7 | 1 | 1 | 1 |     1      |                          | 

module SoP_c (output s, input x, y, w, z);
  // Mintermos: 1 (0001), 2 (0010), 3 (0011), 6 (0110), 7 (0111), 11 (1011), 15 (1111)
  assign s = (~x & ~y & w & z) | (~x & y & ~w & z) | (~x & y & w & z) | (x & ~y & w & z) | (x & y & ~w & z) | (x & y & w & ~z) | (x & y & w & z);
endmodule

module PoS_c (output s, input x, y, w, z);
  // Maxtermos: 0 (0000), 1 (0001), 2 (0010), 4 (0100), 6 (0110), 8 (1000), 11 (1011), 12 (1100)
  assign s = (x | y | w | z) & (x | y | w | ~z) & (x | y | ~w | z) & (x | ~y | w | z) & (~x | y | w | z) & (~x | ~y | w | z) & (~x | y | ~w | ~z) & (~x | ~y | ~w | ~z);
endmodule


    d.)
n | x | y | z | f(x, y, z) | SoP(x, y, z) = ____________ | PoS(x, y, z) = ____________
----------------------------------------------------------------------------
0 | 0 | 0 | 0 |     1      |  x'•y'•z' + x'•y'•z + x'•y•z' + x•y'•z' + x•y•z  |  (x + y + z) • (x + y + ~z) • (~x + ~y + z) • (~x + y + ~z)
1 | 0 | 0 | 1 |     1      |                          | 
2 | 0 | 1 | 0 |     1      |                          | 
3 | 0 | 1 | 1 |     0      |                          | 
4 | 1 | 0 | 0 |     1      |                          | 
5 | 1 | 0 | 1 |     1      |                          | 
6 | 1 | 1 | 0 |     1      |                          | 
7 | 1 | 1 | 1 |     0      |                          | 

module SoP_d (output s, input x, y, w, z);
  // Mintermos: 1 (0001), 2 (0010), 6 (0110), 8 (1000), 10 (1010), 12 (1100), 14 (1110)
  assign s = (~x & ~y & w & ~z) | (~x & y & ~w & ~z) | (~x & y & w & ~z) | (x & ~y & ~w & z) | (x & ~y & w & ~z) | (x & y & ~w & z) | (x & y & w & ~z);
endmodule

module PoS_d (output s, input x, y, w, z);
  // Maxtermos: 1 (0001), 2 (0010), 4 (0100), 7 (0111), 8 (1000), 9 (1001), 15 (1111)
  assign s = (x | y | ~w | ~z) & (x | y | w | ~z) & (x | ~y | ~w | ~z) & (~x | ~y | w | ~z) & (~x | ~y | ~w | ~z) & (~x | ~y | ~w | ~z) & (~x | y | ~w | ~z) & (~x | y | ~w | z);
endmodule


     e.)
n | x | y | w | z | f(x, y, w, z) | SoP(x, y, w, z) = ____________ | PoS(x, y, w, z) = ____________
-----------------------------------------------------------------------------
0 | 0 | 0 | 0 | 0 |       1       |  x'•y'•w'•z' + x'•y'•w'•z + x'•y'•w•z + x'•y•w'•z + x'•y•w•z' + x•y'•w'•z' + x•y'•w'•z + x•y'•w•z + x•y•w'•z' + x•y•w'•z + x•y•w•z' + x•y•w•z  | (x + y + w + z) • (x + y + w + ~z) • (x + y + ~w + z) • (x + y + ~w + ~z) • (x + ~y + w + z) • (x + ~y + w + ~z) • (~x + y + w + z) • (~x + y + ~w + z)
1 | 0 | 0 | 0 | 1 |       1       |                          | 
2 | 0 | 0 | 1 | 0 |       0       |                          | 
3 | 0 | 0 | 1 | 1 |       1       |                          | 
4 | 0 | 1 | 0 | 0 |       0       |                          | 
5 | 0 | 1 | 0 | 1 |       1       |                          | 
6 | 0 | 1 | 1 | 0 |       1       |                          | 
7 | 0 | 1 | 1 | 1 |       0       |                          | 
8 | 1 | 0 | 0 | 0 |       1       |                          | 
9 | 1 | 0 | 0 | 1 |       1       |                          | 
10| 1 | 0 | 1 | 0 |       1       |                          | 
11| 1 | 0 | 1 | 1 |       0       |                          | 
12| 1 | 1 | 0 | 0 |       1       |                          | 
13| 1 | 1 | 0 | 1 |       0       |                          | 
14| 1 | 1 | 1 | 0 |       1       |                          | 
15| 1 | 1 | 1 | 1 |       1       |                          | 

module SoP_e (output s, input x, y, w, z);
  // Mintermos: 0 (0000), 2 (0010), 5 (0101), 7 (0111), 8 (1000), 11 (1011)
  assign s = (~x & ~y & ~w & ~z) | (~x & ~y & w & ~z) | (~x & y & ~w & z) | (~x & y & w & z) | (x & ~y & ~w & ~z) | (x & ~y & w & z);
endmodule

module PoS_e (output s, input x, y, w, z);
  // Maxtermos: 0 (0000), 1 (0001), 2 (0010), 4 (0100), 5 (0101), 10 (1010), 13 (1101)
  assign s = (x | y | w | ~z) & (x | y | ~w | z) & (x | ~y | w | z) & (~x | y | ~w | z) & (~x | ~y | ~w | ~z) & (~x | ~y | w | ~z) & (~x | y | ~w | ~z);
endmodule

